package com.hongocman.quanlymonhoc.models;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.hongocman.quanlymonhoc.models.DiemDanhModel;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "DIEM_DANH_MODEL".
*/
public class DiemDanhModelDao extends AbstractDao<DiemDanhModel, Long> {

    public static final String TABLENAME = "DIEM_DANH_MODEL";

    /**
     * Properties of entity DiemDanhModel.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property ID = new Property(0, Long.class, "ID", true, "ID");
        public final static Property MonHocID = new Property(1, String.class, "MonHocID", false, "MON_HOC_ID");
        public final static Property SinhVienID = new Property(2, String.class, "SinhVienID", false, "SINH_VIEN_ID");
        public final static Property BuoiID = new Property(3, String.class, "BuoiID", false, "BUOI_ID");
        public final static Property ThuID = new Property(4, String.class, "ThuID", false, "THU_ID");
        public final static Property Status = new Property(5, Boolean.class, "Status", false, "STATUS");
        public final static Property Date = new Property(6, java.util.Date.class, "Date", false, "DATE");
    };


    public DiemDanhModelDao(DaoConfig config) {
        super(config);
    }
    
    public DiemDanhModelDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"DIEM_DANH_MODEL\" (" + //
                "\"ID\" INTEGER PRIMARY KEY ," + // 0: ID
                "\"MON_HOC_ID\" TEXT," + // 1: MonHocID
                "\"SINH_VIEN_ID\" TEXT," + // 2: SinhVienID
                "\"BUOI_ID\" TEXT," + // 3: BuoiID
                "\"THU_ID\" TEXT," + // 4: ThuID
                "\"STATUS\" INTEGER," + // 5: Status
                "\"DATE\" INTEGER);"); // 6: Date
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"DIEM_DANH_MODEL\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, DiemDanhModel entity) {
        stmt.clearBindings();
 
        Long ID = entity.getID();
        if (ID != null) {
            stmt.bindLong(1, ID);
        }
 
        String MonHocID = entity.getMonHocID();
        if (MonHocID != null) {
            stmt.bindString(2, MonHocID);
        }
 
        String SinhVienID = entity.getSinhVienID();
        if (SinhVienID != null) {
            stmt.bindString(3, SinhVienID);
        }
 
        String BuoiID = entity.getBuoiID();
        if (BuoiID != null) {
            stmt.bindString(4, BuoiID);
        }
 
        String ThuID = entity.getThuID();
        if (ThuID != null) {
            stmt.bindString(5, ThuID);
        }
 
        Boolean Status = entity.getStatus();
        if (Status != null) {
            stmt.bindLong(6, Status ? 1L: 0L);
        }
 
        java.util.Date Date = entity.getDate();
        if (Date != null) {
            stmt.bindLong(7, Date.getTime());
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public DiemDanhModel readEntity(Cursor cursor, int offset) {
        DiemDanhModel entity = new DiemDanhModel( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // ID
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // MonHocID
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // SinhVienID
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // BuoiID
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // ThuID
            cursor.isNull(offset + 5) ? null : cursor.getShort(offset + 5) != 0, // Status
            cursor.isNull(offset + 6) ? null : new java.util.Date(cursor.getLong(offset + 6)) // Date
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, DiemDanhModel entity, int offset) {
        entity.setID(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setMonHocID(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setSinhVienID(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setBuoiID(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setThuID(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setStatus(cursor.isNull(offset + 5) ? null : cursor.getShort(offset + 5) != 0);
        entity.setDate(cursor.isNull(offset + 6) ? null : new java.util.Date(cursor.getLong(offset + 6)));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(DiemDanhModel entity, long rowId) {
        entity.setID(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(DiemDanhModel entity) {
        if(entity != null) {
            return entity.getID();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
