package com.hongocman.quanlymonhoc.models;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.hongocman.quanlymonhoc.models.ThoiKhoaBieuModel;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "THOI_KHOA_BIEU_MODEL".
*/
public class ThoiKhoaBieuModelDao extends AbstractDao<ThoiKhoaBieuModel, Void> {

    public static final String TABLENAME = "THOI_KHOA_BIEU_MODEL";

    /**
     * Properties of entity ThoiKhoaBieuModel.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property BuoiID = new Property(0, String.class, "BuoiID", false, "BUOI_ID");
        public final static Property MonHocID = new Property(1, String.class, "MonHocID", false, "MON_HOC_ID");
        public final static Property ThuID = new Property(2, String.class, "ThuID", false, "THU_ID");
    };


    public ThoiKhoaBieuModelDao(DaoConfig config) {
        super(config);
    }
    
    public ThoiKhoaBieuModelDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"THOI_KHOA_BIEU_MODEL\" (" + //
                "\"BUOI_ID\" TEXT NOT NULL ," + // 0: BuoiID
                "\"MON_HOC_ID\" TEXT NOT NULL ," + // 1: MonHocID
                "\"THU_ID\" TEXT NOT NULL );"); // 2: ThuID
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"THOI_KHOA_BIEU_MODEL\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, ThoiKhoaBieuModel entity) {
        stmt.clearBindings();
        stmt.bindString(1, entity.getBuoiID());
        stmt.bindString(2, entity.getMonHocID());
        stmt.bindString(3, entity.getThuID());
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public ThoiKhoaBieuModel readEntity(Cursor cursor, int offset) {
        ThoiKhoaBieuModel entity = new ThoiKhoaBieuModel( //
            cursor.getString(offset + 0), // BuoiID
            cursor.getString(offset + 1), // MonHocID
            cursor.getString(offset + 2) // ThuID
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, ThoiKhoaBieuModel entity, int offset) {
        entity.setBuoiID(cursor.getString(offset + 0));
        entity.setMonHocID(cursor.getString(offset + 1));
        entity.setThuID(cursor.getString(offset + 2));
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(ThoiKhoaBieuModel entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(ThoiKhoaBieuModel entity) {
        return null;
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
