package com.hongocman.quanlymonhoc.models;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.hongocman.quanlymonhoc.models.DangKyBuoiHocModel;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "DANG_KY_BUOI_HOC_MODEL".
*/
public class DangKyBuoiHocModelDao extends AbstractDao<DangKyBuoiHocModel, Void> {

    public static final String TABLENAME = "DANG_KY_BUOI_HOC_MODEL";

    /**
     * Properties of entity DangKyBuoiHocModel.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property MonHocID = new Property(0, String.class, "MonHocID", false, "MON_HOC_ID");
        public final static Property SinhVienID = new Property(1, String.class, "SinhVienID", false, "SINH_VIEN_ID");
        public final static Property Date = new Property(2, java.util.Date.class, "Date", false, "DATE");
    };


    public DangKyBuoiHocModelDao(DaoConfig config) {
        super(config);
    }
    
    public DangKyBuoiHocModelDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"DANG_KY_BUOI_HOC_MODEL\" (" + //
                "\"MON_HOC_ID\" TEXT," + // 0: MonHocID
                "\"SINH_VIEN_ID\" TEXT," + // 1: SinhVienID
                "\"DATE\" INTEGER);"); // 2: Date
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"DANG_KY_BUOI_HOC_MODEL\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, DangKyBuoiHocModel entity) {
        stmt.clearBindings();
 
        String MonHocID = entity.getMonHocID();
        if (MonHocID != null) {
            stmt.bindString(1, MonHocID);
        }
 
        String SinhVienID = entity.getSinhVienID();
        if (SinhVienID != null) {
            stmt.bindString(2, SinhVienID);
        }
 
        java.util.Date Date = entity.getDate();
        if (Date != null) {
            stmt.bindLong(3, Date.getTime());
        }
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public DangKyBuoiHocModel readEntity(Cursor cursor, int offset) {
        DangKyBuoiHocModel entity = new DangKyBuoiHocModel( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // MonHocID
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // SinhVienID
            cursor.isNull(offset + 2) ? null : new java.util.Date(cursor.getLong(offset + 2)) // Date
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, DangKyBuoiHocModel entity, int offset) {
        entity.setMonHocID(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setSinhVienID(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setDate(cursor.isNull(offset + 2) ? null : new java.util.Date(cursor.getLong(offset + 2)));
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(DangKyBuoiHocModel entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(DangKyBuoiHocModel entity) {
        return null;
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
